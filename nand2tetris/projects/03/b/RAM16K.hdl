// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
      DMux4Way(in=load, sel=address[12..13], a=aOut, b=bOut, c=cOut, d=dOut);
      RAM4K(in=in, load=aOut, address=address[0..11], out=rAout);
      RAM4K(in=in, load=bOut, address=address[0..11], out=rBout);
      RAM4K(in=in, load=cOut, address=address[0..11], out=rCout);
      RAM4K(in=in, load=dOut, address=address[0..11], out=rDout);
      Mux4Way16(a=rAout, b=rBout, c=rCout, d=rDout, sel=address[12..13], out=out);
}
