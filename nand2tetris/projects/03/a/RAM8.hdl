// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
      DMux8Way(in=load, sel=address, a=aOut, b=bOut, c=cOut, d=dOut, e=eOut ,f=fOut ,g=gOut ,h=hOut);
      Register(in=in, load=aOut, out=rAout);
      Register(in=in, load=bOut, out=rBout);
      Register(in=in, load=cOut, out=rCout);
      Register(in=in, load=dOut, out=rDout);
      Register(in=in, load=eOut, out=rEout);
      Register(in=in, load=fOut, out=rFout);
      Register(in=in, load=gOut, out=rGout);
      Register(in=in, load=hOut, out=rHout);
      Mux8Way16(a=rAout, b=rBout, c=rCout, d=rDout, e=rEout, f=rFout, g=rGout, h=rHout, sel=address, out=out);
}
